
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <title>Minh Pham</title>
    <link rel="icon" type="image/png" href="../public/assets/Group%20959.png"/>
</head>

<style>

    @import url('https://fonts.googleapis.com/css?family=Poppins:400,700');
    @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@800&display=swap');
    @font-face {
        font-family: "Nutty";
        src: url("../public/assets/fonts/nutty_noisses/Nutty Noisses.otf") format("opentype");
    }
    @font-face {
        font-family: "Rostrum";
        src: url("../public/assets/SaiGonRostrum.otf") format("opentype");
    }
    @font-face {
        font-family: "Cubano";
        src: url("../public/assets/SaiGonCubano.otf") format("opentype");
    }
    @font-face {
        font-family: "Poppins";
        src: url("../public/assets/fonts/Poppins-Regular.ttf") format("opentype");
    }
    body {
        font-family: 'Poppins', sans-serif;
        margin:0;
        overflow: scroll;
        color: white;
    }
    * {
        cursor: default;
    }
    .no-select {
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }
    h1 {
        z-index: 1;
        font-family: 'Cubano', sans-serif;
        color: white;
        font-size: 100px;
        text-align: center
    }
    h1:hover {
        background-color: white;
        color: black;
    }
    .glitch {
        color: white;
    }
    .glitch:hover {
        background-color: white;
        color: black;
    }
    h2{
        z-index: 1;
        font-family: 'Cubano', sans-serif;
        font-size: 2.3em;
        margin: 0;
    }
    p {
        z-index: 1;
    }
    .nav {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        align-content: center;
        margin-top: 60px;
        width: 100%;
        height: 20px;
        color: white;
        /*background-color: rgba(255, 255, 255, 0.2);*/
    }
    .nav:hover{
        color: black;

        /*background-color: rgba(255, 255, 255, 0.5);*/
    }
    #inside-nav {
        display: flex;
        justify-content: center;
        align-items: center;
        align-content: center;
        background-color: rgba(255, 255, 255, 0.2);
        border-radius: 20px;
    }
    #inside-nav:hover{
        background-color: rgba(255, 255, 255, 0.5);
    }
    .nav-item {
        margin: 20px;
    }

    .nav-item:hover {
        cursor: pointer;
    }

    #hero {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 500px;

        background-color: #f4f4f4;
    }
    .hero-text {
        width: 60%;
        max-width:600px;
        padding: 30px;
        text-align: center;
    }
    .hero-text h1 {
        font-size: 36px;
        margin-bottom: 20px;
    }
    .hero-text p {
        font-size: 18px;
        color: gray;
    }
    .hero-image img {
        width: 85%;
        height: auto;
        offset-position: 100px;
        max-width: 600px;
        transform: translateY(15%) translateX(5%) scale(120%);
    }

    .section h2 {
        font-size: 2.5em;
        margin-bottom: 15px;
    }

    .section p {
        line-height: 1.625em;
        margin: 0 auto;
        max-width: 480px;
    }
    footer {
        text-align: center;
    }
    .black-btn{
        border-radius: 20px;
        background-color: black;
        color: #F1D47C;
        border: none;
        font-size: 12px;
        font-weight: bold;
        padding: 15px 45px;
        letter-spacing: 1px;
        text-transform: uppercase;
    }
    .black-btn:hover{
        cursor:pointer;
        background-color: #F1D47C;
        color: black;
    }
    .white-btn{
        border-radius: 20px;
        background-color: #f6f5f7;
        color: black;
        border: none;
        font-size: 12px;
        font-weight: bold;
        padding: 15px 45px;
        letter-spacing: 1px;
        text-transform: uppercase;
    }
    .white-btn:hover{
        cursor:pointer;
        background-color: #F1D47C;
    }
    button {
        z-index: 1;
    }
    button span {
        position: absolute;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.3);
        width: 100px;
        height: 100px;
        margin-top: 50px;
        margin-left: 50px;
        animation: ripple 1s;
        opacity: 0;
    }

    @keyframes ripple {
        from {
            opacity: 1;
            transform: scale(0);
        }
        to {
            opacity: 0;
            transform: scale(10);
        }
    }
    @keyframes rotate {
        from {
            rotate: 0deg;
        }
        to {
            rotate: 360deg;
        }
    }
    #blob {
        z-index: 0;
        background-color: white;
        height: 500px;
        aspect-ratio: 1;
        position: absolute;
        left: 50%;
        top: 50%;
        translate: -50% -50%;
        border-radius: 50%;
        background: linear-gradient(to right, #f1d47c, #6e1320);
        animation: rotate 20s infinite;
        filter: blur(200px);
    }
</style>
<body ononline="onFunction()" onoffline="offFunction()">
<div class="site" style="background-color:#f4f4f4" >
    <div id="blob" class="no-select"></div>
<!--    if there are changes in window width, when it falls below a certain threshold,
        make the navbar full width (phone screen)       -->
    <nav class="nav">
        <div id="inside-nav">
            <div class="nav-item" onclick="window.location.replace('/')">Home</div>
            <div class="nav-item" onclick="window.location.replace('/')">Work</div>
            <div class="nav-item" onclick="window.location.replace('/')">About</div>
            <div class="nav-item" onclick="window.location.replace('/')">Projects</div>
            <div class="nav-item" onclick="window.location.replace('/')">Contact</div>
        </div>
    </nav>
    <div id="hero" style="background-color: black">
        <h1 class="glitch" data-value="Minh Pham">Minh Pham</h1>
    </div>
    <section class="hidden">
        <div style="
    background-color: black;
    flex-direction: column;
    padding-top: 110px; padding-bottom: 110px">
            <div style="display: flex; flex-direction: column; align-items: center;">
                <h2 style="text-align: center;" class="glitch" id="work" data-value="Work">Work</h2>
                <p style="text-align: center; margin-left: 200px; margin-right: 200px; max-width: 600px">
                    I have done some work, and they will show up over here
                </p>
                <button class="black-btn">Read more</button>
            </div>
        </div>
    </section>
    <section class="hidden">
        <div style="background: black;flex-direction: column;padding-top: 50px; padding-bottom: 50px">
            <div style="display: flex; flex-direction: column; align-items: center;">
                <h2 style="text-align: center" class="glitch" id="about" data-value="About Me">About Me</h2>
                <p style="text-align: center; color: white; margin-left: 200px; margin-right: 200px; max-width: 600px">
                    Northern Horizon is a project-based
                    learning program for students to develop their career-oriented skills and
                    portfolios by simulating the professional working environment.</p>
                <button class="white-btn">Read more</button>
            </div>
        </div>
    </section>
</div>
</body>
<script>
    const blob = document.getElementById('blob');
    document.body.onpointermove = event => {
        const { clientX, clientY } = event;
        const scrollX = window.scrollX || window.pageXOffset;
        const scrollY = window.scrollY || window.pageYOffset;

        const adjustedX = clientX + scrollX;
        const adjustedY = clientY + scrollY;

        blob.animate({
            left: `${adjustedX}px`,
            top: `${adjustedY}px`
        }, { duration: 1000, fill: "forwards" });
    }

    let hero = document.getElementById('hero');
    let winHeight = window.innerHeight.toString() + 'px';
    hero.style.setProperty('height', winHeight);
    console.log();
    //detect changes in window width and height

    const letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    let interval = null;
    function glitch(event) {
        let iteration = 0;
        console.log(event.target.innerText);
        clearInterval(interval);
        interval = setInterval(() => {
            event.target.innerText = event.target.innerText
                .split("")
                .map((letter, index) => {
                    if (letter === " ") {
                        return " "; // Preserve spaces
                    }
                    if (index < iteration) {
                        return event.target.dataset.value[index];
                    }
                    return letters[Math.floor(Math.random() * 26)];
                })
                .join("");
            if (iteration >= event.target.dataset.value.length) {
                clearInterval(interval);
            }
            iteration += 1 / 3;
        }, 40);
    }

    document.querySelector('h1').onmouseover = function(event) {
        glitch(event);
    };
    document.querySelector('#about').onmouseover = function(event) {
        glitch(event);
    }
    document.querySelector('#work').onmouseover = function(event) {
        glitch(event);
    }

    //hidden stuff js
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            console.log(entry);
            if (entry.isIntersecting) {
                entry.target.classList.add('show');
            }
            else {
                entry.target.classList.remove('show');
            }
        })
    })
    const hiddenElements = document.querySelectorAll('.hidden');
    hiddenElements.forEach((el)=> {})
</script>
</html>
